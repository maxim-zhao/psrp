File                Removed                                           Freed Added                                             Used
t4b_1               $00486-004b3: no-di graphics decompressor            45 $00486-00494: redirector to PS Gaiden RLE decoder   14
t4a_4                                                                       $00494-004a6: bank 1 restoration on INT             19
                                                                            $004a7-004b3: free? (13) * used for 4-cursor hack, below *

t0d                 $034f2-03545: draw one character to tilemap          83 $034f2-03515: draw one tile to tilemap              36
stats_1.bin		                                                              $03516-03537: stats menu tiles ('LV', 'MST')        34
                                                                            $03538-03545: free (14)

t1b                 $033fe-03493?: draw number inline with text         121 $033fe-03467: render number to RAM, plural flag    105    ???


t2b_3.obj                                                                   $03494-0349d; Spell blank line - addition           10

TODO: figure out space used by password routines

t0b                 $045a4-045c6: tile loading for intro                 29 $045a4-045c6: tile loading for intro, now with
                                                                                          re-usable font loader at $45a9

t4b                 $4be84-4bfff: blank data                            300 $4be84-4bf73: PS Gaiden RLE decoder                239   147 free

world2_e.bin        $58570-5ac7c: landscapes (world 2)                 9997 $58570-5a6db: recompressed                        8556
                                                                            $5a6dc-5ac7c: free?
opening.bin                                                                 $5aadc-5ac1d: Opening cinema                       322

bg13_e.bin          $5ac8d-5b9d6: Air Castle                           3402 $5ac8d-5b78c: recompressed                        2816
                                                                            $5b78d-5b9d6: free?

world1_e.bin        $747b8-77629: landscapes (world 1)                11890 $747b8-76ba5: recompressed                        9198
lists.bin                                                                   $76ba6-?????: Enemy, name, item lists             1775
                                                                            $?????-77629: Space for above to grow (as translation continues)

title_e.bin         $7e8bd-7ffff: Title screen (old encoding)          5955 $7e8bd-7fd35: Title screen (new encoding, edited) 5240
t1c                                                                         $7fd8d-7fdc4: Dictionary lookup                     56
t4a_2.obj			                                                              $7fe00-?????: Huffman decoder init - add.scr.codes 146
t4a_3.obj			                                                              $7fed0-?????: Huffman decoder init - substr fmter  206


Inline hacks:
00040 hex_9404.bin		; INT fix
00182 hex_c9.bin			; INT fix; - RET
007c9 hex_cda9451812.bin		; Load game font decoding ; - CALL $45a9; JR $7e0
008f9 hex_0040.bin		; PSG bitmap decoder;  - ld hl, $4000 (dest)
008fc hex_bda8.bin		; PSG bitmap decoder;  - ld de, $a8bd (dest)
00925 title-pal.bin ; palette
00cea hex_0040.bin		; PSG bitmap decoder ; Landscapes ; - VRAM
00ced hex_b887.bin		; PSG bitmap decoder ; Landscapes ; - Source
00cef hex_cd8604.bin		; PSG bitmap decoder ; Landscapes ; - CALL [PSG decoder] (world)
00cfa hex_0040.bin		; PSG bitmap decoder ; Landscapes ; - VRAM
00cfd hex_7085.bin		; PSG bitmap decoder ; Landscapes ; - Source
00cff hex_cd8604.bin		; PSG bitmap decoder ; Landscapes ; - CALL [PSG decoder] (towns)
010e3 hex_cda9451812.bin		; Dungeon font decoding ; - CALL $45a9; JR $7e0
01b6a hex_4c7a.bin		; - VRAM cursor
01ee1 hex_4c7a.bin		; - VRAM cursor
02fdb hex_dc.bin    ; cursor tile index
03015 hex_80df.bin		; #14 - Active player
03023 hex_67.bin			; - LD H,A
03024 hex_2e30.bin		; - LD L,[MENU_SIZE] = (8*2)*3
03026 hex_00.bin			; - NOP
03027 hex_cde43d.bin		; - CALL $3de4
03036 hex_80df.bin
03145 hex_12.bin			; - width * 2
031a3 hex_0e.bin			; - width * 2
03211 hex_d210.bin		; H
03213 hex_da10.bin		; P
03219 hex_d710.bin		; M
0321b hex_da10.bin		; P
03256 hex_20df.bin		; #12 - Enemy name
03259 hex_1878.bin		; Enemy name VRAM
03271 hex_1878.bin   ; Enemy name VRAM
0331b hex_20df.bin
0331e hex_1878.bin   ; Enemy name VRAM
0333f hex_3dc350bf.bin			; Semi-adaptive Huffman script decoder; In-game narrative init; - DEC A    = method selection ($01); JP $bf50 = decoder init
03365 hex_cd007e.bin		; In-game text decoder ; - CALL $7e00
03397 hex_c30f00.bin ; jp $000f - patch code to jump to replacement routine
034aa hex_3e00cd50bfc9.bin		; Semi-adaptive Huffman script decoder; Cutscene narrative init ; - LD A,$00   = method selection; CALL $bf50 = decoder init; RET
034b4 hex_cd007e282ffe572830.bin		; Semi-adaptive Huffman script decoder; Cutscene text decoder ; - CALL $7e00; JR Z,$34e8 = order flip; - CP $57 = order flip; - JR Z,$34ed = order flip
034c9 hex_40.bin ; cutscene text display: increment VRAM pointer by $0040 (not $0080) for newlines
034e6 hex_77bf.bin 		; Semi-adaptive Huffman script decoder; Cutscene $55 clear code
0354c hex_000000.bin ; nop out 2nd line scroll
035bf hex_12.bin			; - (7+2)*2 width
035d4 hex_0c.bin			; - height
03617 hex_2879.bin		; - VRAM cursor
0363f hex_a878.bin		; Inventory VRAM (2 tiles left)
0364b hex_a878.bin
036dd hex_0e.bin
036e5 hex_0c.bin			; - width * 2
036e7 hex_2835.bin		; - MST source
03778 hex_a878.bin
03788 hex_60de.bin		; #5  - Choose player
037a5 hex_d0dd.bin		; #7  - Magic - Depth 3 (choose player)
037c8 hex_10.bin			; Choose player: width*2
037de hex_60de.bin
037ef hex_d0dd.bin
03826 hex_f0de.bin		; #9  - Current equipment
03829 hex_887a.bin
03835 hex_887a.bin		; Equipment VRAM
0386b hex_f0de.bin
0386e hex_887a.bin
03877 hex_60d9.bin		; #8  - Item selected
03889 hex_60d9.bin
038c1 hex_f0de.bin   ; Yes/no - clashes with #5
038e1 hex_f0de.bin
038fc hex_50dc.bin 	; #10 - Individual stats
03911 hex_1635.bin		; - LV source
0391a hex_8239.bin		; - EXP source
0392f hex_9439.bin		; - Attack source
03941 hex_a639.bin		; - Defense source
03953 hex_b839.bin		; - Max HP source
03965 hex_ca39.bin		; - Max MP source
039df hex_50dc.bin
03a40 hex_4c78.bin		; Shop inventory VRAM
03ad0 hex_00dd.bin		; #18 - Save slots
03b08 hex_00dd.bin
03b18 hex_cc7b.bin		; Store MST VRAM
03b26 hex_cc7b.bin
03b41 hex_cc7b.bin
03b4f hex_ea7a.bin		; - move window down 1 tile
03b58 hex_11.bin			; Hapsby travel (bank)
03b63 hex_2a7b.bin		; - VRAM cursor
03b76 hex_ea7a.bin
03b82 hex_11.bin			; Menus ; menu bank
03bab hex_11.bin     ; Menus ; menu bank
03dde hex_cda9451812.bin		; In-game font decoding ; - CALL $45a9; JR $3df5
03eb0 hex_565f.bin		; PSG bitmap decoder ; Backgrounds ; - LD D,(HL) / LE E,A
03eb2 hex_21.bin			; PSG bitmap decoder ; Backgrounds ; - LD HL,$4000
03eb5 hex_cd8604.bin		; PSG bitmap decoder ; Backgrounds ; - decoder CALL
040eb hex_e0.bin ; max sprite x
04102 hex_60.bin ; min sprite y
04119 hex_90.bin ; max sprite y
04130 hex_18.bin ; min sprite x
04161 hex_48.bin ; x coordinate of sprite for Next
04163 hex_96d4.bin ; lookup position for Next
0416a hex_8a.bin ; lookup position for Prev (same high byte as for Next)
0416c hex_18.bin ; x coordinate of sprite for Prev
04170 hex_c8.bin ; x coordinate of sprite for Save
04172 hex_b6.bin ; lookup position for Save (same high byte as for Next)
041cb hex_2001.bin   ; bc parameter = bytes per line, number of lines
041d2 hex_5078.bin   ; de parameter = where to draw (8,1)
041d6 hex_28.bin     ; change function call to full raw tilemap drawer
041e4 hex_3e44.bin   ; subvert call to output TileMapData to the screen
04221 hex_18600ad30b.bin ; init data for cursor in name entry screen: x=$18, y=$60, [xy=$d30a], value=$0b='A'
04243 hex_cda70400.bin ; call $04a7; nop ; 4-sprite cursor hack ; 1. Extra y coordinates
04251 hex_04.bin ; 4-sprite cursor hack ; 2. Extra x coords and tile indices
0425c hex_c6.bin ; sub nn -> add a,nn ; 4-sprite cursor hack ; 3. Cursor extends right, not left, relative to the "snapped" positions
04342 hex_04.bin ; height of lookup table - width*height<=126
04344 hex_1a.bin ; width of lookup table
0434e hex_4c.bin ; width complement; (434e)+(4344)*2=$80
045d7 hex_16.bin			; - source bank
045d9 hex_dcaa.bin		; - source
045df hex_2e07.bin		; - width*2, height
0488d hex_2058.bin		; - VRAM
04890 hex_eebd.bin		; - Source
04892 hex_cd8604.bin		; - CALL [PSG decoder] (credits font)
048da hex_cda9451812.bin		; Cutscene font decoding ; - CALL $45a9; JR $48f1
049b0 hex_bd59.bin		; - JP NC,$59bd
059ba hex_c33a33.bin		; English script ; Index table remap
0697d hex_b745.bin ; Dungeon font decoding ; call $b5b7 (halfway through new loader, for just the second font group)
0eec9 hex_ff.bin			; - scripting code


0000f TX1.OBJ        ; patched code for newlines in 2->3-line dialogues
03279 t2a_3.obj			; - enemy setup code
033aa t1c_2.obj			; Narrative scripting; Player lookup
033c8 t1c_3.obj			; Narrative scripting; Enemy lookup
033da t1c_1.obj			; Narrative scripting; Item lookup
033f6 t1b.obj			; Narrative scripting; Number lookup
03494 t2b_3.obj			; - addition
034f2 t0d.obj			; NT output renderer
035a2 t2b_1.obj			; Spell selection finder
035c5 t2b_2.obj			; Spell blank line
03671 t2a_1.obj			; - inventory setup code
03850 t2a_4.obj			; - equipment setup code
03982 stats_2.bin		; - 'EXP' -> 'Max MP' strings
03a1f t2a_2.obj			; - shop setup code
03de4 t2b.obj			; Active player - menu offset finder
03eca bg_vector.bin		; PSG bitmap decoder ; Backgrounds ; - vector table
0429b tx2.obj ; Drawing to RAM as you enter:
042b5 tx3.obj ; Drawing to screen as you enter:
043e6 save_text.bin  ; name entry screen title text - now it's full raw tilemap data
04406 save_tiles.bin
0443e tx4.obj ; code and data for drawing extended chars there
0448c save_lookup.bin ; lookup table
045a4 t0b.obj			; ; Intro font decoding - #1/#2 table decoder calls
059bd t5.obj			; Dezorian string
08000 font-nt.bin		; NT output renderer - tile attributes
080b0 tree_vector.bin		; Semi-adaptive Huffman script decoder; Tree vectors
082b0 script_trees.bin		; Semi-adaptive Huffman script decoder; Tree vectors - actual Huffman trees
0bed0 t4a.obj			; Semi-adaptive Huffman script decoder; Decoder init - SFG decoder
0bf50 t4a_1.obj			; Semi-adaptive Huffman script decoder; Decoder init
27b24 bg29_e.bin    ; PSG bitmap decoder ; Backgrounds ; - no merge
2c010 bg14_e.bin    ; PSG bitmap decoder ; Backgrounds ; - no merge
2fe3e t2a.obj			; scripting code
3BC68 title-nt.bin ; tilemap
3fdee font3_e.bin
40000 bg_table1.bin		; PSG bitmap decoder ; Backgrounds ; - accompanying data
40050 bg1_e.bin			; PSG bitmap decoder ; Backgrounds ; - merged
40ba7 bg2_e.bin     ; PSG bitmap decoder ; Backgrounds ; - merged
41799 bg3_e.bin     ; PSG bitmap decoder ; Backgrounds ; - merged
43406 bg5_e.bin			; PSG bitmap decoder ; Backgrounds ; - merged w/ font
43871 font1_e.bin		; font table
43a87 font2_e.bin   ; font table
43c00 words.bin			; Lists ; Static dictionary
44640 bg_table8.bin		; PSG bitmap decoder ; Backgrounds ; - accompanying data
44680 bg8_e.bin			; PSG bitmap decoder ; Backgrounds ; - merged
45338 bg9_e.bin     ; PSG bitmap decoder ; Backgrounds ; - merged
45cb0 bg10_e.bin    ; PSG bitmap decoder ; Backgrounds ; - merged
46524 bg11_e.bin    ; PSG bitmap decoder ; Backgrounds ; - merged
46c81 menus.bin			; Menus ; hard-coded window data
4c010 bg31_e.bin    ; PSG bitmap decoder ; Backgrounds ; - no merge
524ea bg30_e.bin    ; PSG bitmap decoder ; Backgrounds ; - no merge
53dbc credits.bin
5eb6f bg16_e.bin    ; PSG bitmap decoder ; Backgrounds ; - no merge


; Cheat: all characters start at LV 20
01854 hex_14.bin
; Cheat: collect any money to get 65535
02adb hex_0000.bin
; cheat: HP rolls over 0->255 (nop out overflow handler setting it to 0)
01723 hex_00.bin
; cheat: free magic
01cf8 hex_00.bin
